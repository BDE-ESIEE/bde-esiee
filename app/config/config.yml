imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    exception_controller: 'FOS\RestBundle\Controller\ExceptionController::showAction'
    form:
        resources:
            - 'SonataAdminBundle:Form:silex_form_div_layout.html.twig'
            - 'SonataFormatterBundle:Form:formatter.html.twig'
            - 'SonataCoreBundle:Form:datepicker.html.twig'
            - 'SonataMediaBundle:Form:media_widgets.html.twig'
    globals:
        version: %application_version%
        piwik_id: %piwik_id%
        piwik_url: %piwik_url%

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    read_from:            "%kernel.root_dir%/../www"
    bundles:
        - ApplicationBDEBundle
        - SonataMediaBundle
        - FOSCommentBundle
        - MopaBootstrapBundle
        - SonataNewsBundle
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        yui_css:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"
        yui_js:
            jar: "%kernel.root_dir%/Resources/java/yuicompressor.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

fos_user:
    db_driver:      orm # can be orm or odm
    firewall_name:  main
    user_class:     Application\Sonata\UserBundle\Entity\User
    group:
        group_class:   Application\Sonata\UserBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
    registration:
        confirmation:
            enabled:    true
        form:
            type: sonata_user_registration

sonata_user:
    security_acl: true
    manager_type: orm
    impersonating_route:    sonata_admin_dashboard
    table:
        user_group: nk_user_user_group
    profile:
        # Profile show page is a dashboard as in SonataAdminBundle
        dashboard:
            blocks:
                - { position: left, type: sonata.block.service.text, settings: { content: "<h2>Coucou!</h2> Caca"} }
                #- { position: right, type: sonata.timeline.block.timeline, settings: { max_per_page: 5 }}
                - { position: left, type: sonata.news.block.recent_posts, settings: { title: Derni√®res News, number: 5, mode: public }}
                - { position: right, type: sonata.news.block.recent_comments, settings: { title: Derniers Commentaires, number: 5, mode: public }}

sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.user.block.menu:
        sonata.user.block.account:
        sonata.formatter.block.formatter:
        sonata.timeline.block.timeline:
        sonata.block.service.text:
        sonata.admin.block.search_result:
        sonata.news.block.recent_posts:
        sonata.news.block.recent_comments:
        application.sonata.block.service.editable_text:

sonata_news:
    title:        BDE ESIEE Paris
    link:         http://bde.esiee.fr
    description:  BDE Ferus ESIEE Paris
    salt:         'UUuH5xUBiRChelFvqXa1'
    permalink_generator: sonata.news.permalink.date

    comment:
        notification:
            emails:   [email@example.org, email2@example.org]
            from:     no-reply@sonata-project.org
            template: 'SonataNewsBundle:Mail:comment_notification.txt.twig'

sonata_media:
    class:
        media:             Application\Sonata\MediaBundle\Entity\Media
        gallery:           Application\Sonata\MediaBundle\Entity\Gallery
        gallery_has_media: Application\Sonata\MediaBundle\Entity\GalleryHasMedia
    default_context: gallery
    db_driver: doctrine_orm # or doctrine_mongodb, doctrine_phpcr
    contexts:
        gallery:
            providers:
                - sonata.media.provider.dailymotion
                - sonata.media.provider.youtube
                - sonata.media.provider.image
                - sonata.media.provider.file

            formats:
                big:   { width: 500 , quality: 90}
                small: { width: 90 , quality: 95}
        club:
            providers:
                - sonata.media.provider.image

            formats:
                big:   { width: 418 , quality: 90}
                small: { width: 90 , quality: 95}
        shop:
            providers:
                - sonata.media.provider.image

            formats:
                big:   { width: 500 , quality: 90}
                small: { width: 260 , quality: 95}
        news:
            providers:
                - sonata.media.provider.image

            formats:
                big:   { width: 700 , quality: 90}
                small: { width: 90 , quality: 95}

    cdn:
        server:
            path: %hostname%uploads/media

    filesystem:
        local:
            directory:  %kernel.root_dir%/../www/uploads/media
            create:     false

ivory_ck_editor:
    default_config: main
    configs:
        main:
            toolbar: "toolbar_basic"
            filebrowserBrowseRoute: admin_sonata_media_media_ckeditor_browser
            filebrowserImageBrowseRoute: admin_sonata_media_media_ckeditor_browser
            # Display images by default when clicking the image dialog browse button
            filebrowserImageBrowseRouteParameters:
                provider: sonata.media.provider.image
            filebrowserUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserUploadRouteParameters:
                provider: sonata.media.provider.file
            # Upload file as image when sending a file from the image dialog
            filebrowserImageUploadRoute: admin_sonata_media_media_ckeditor_upload
            filebrowserImageUploadRouteParameters:
                provider: sonata.media.provider.image
            allowedContent: true
            # protectedSource: ['/<i[^>]*><\/i>/g']
            contentsCss: ['/bundles/ivoryckeditor/contents.css', '/bundles/applicationbde/css/font-awesome.css', '/bundles/applicationbde/css/bootstrap.min.css']
    toolbars:
        configs:
            toolbar_basic: ["@clipboard", "@editing", "/", "@basicstyles", "@links", "@paragraph", "/", '@styles', '@colors', '@tools', '@insert' ]
        items:
            clipboard : [ 'Cut','Copy','Paste','PasteText','PasteFromWord','-','Undo','Redo', '-', 'Preview' ]
            editing : [ 'Find','Replace','-','SelectAll','-','SpellChecker', 'Scayt' ]

            basicstyles : [ 'Bold','Italic','Underline','Strike','Subscript','Superscript','-','RemoveFormat' ]
            paragraph : [ 'NumberedList','BulletedList','-','Blockquote','-','JustifyLeft','JustifyCenter','JustifyRight','JustifyBlock' ]
            links: [ 'Link','Unlink','Anchor' ]
            insert : [ 'Image', 'Table','HorizontalRule','SpecialChar' ]

            styles : [ 'Format','FontSize' ]
            colors : [ 'TextColor','BGColor' ]
            tools : [ 'Source', 'Maximize' ]

sonata_formatter:
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
                - sonata.media.formatter.twig

sonata_admin:
    title:      Ferus Inside
    title_logo: logoFerus.png
    templates:
        layout:  ApplicationSonataAdminBundle::layout.html.twig
    dashboard:
        blocks:
            -
                position: left
                type: sonata.admin.block.admin_list
            -
                position: right
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Coucou</h2>
                        <p>Bienvenue je vous accueille</p>
            # -
            #     position: right
            #     type: sonata.timeline.block.timeline
            #     settings:
            #         context: ROLE_SUPER_ADMIN
            #         max_per_page: 10
        groups:
            blog:
                label: Blog
                items:
                    - bde.admin.post
                    - sonata.comment.admin.thread
                    - sonata.classification.admin.collection
                    - sonata.classification.admin.tag
                    - bde.admin.editable_text_block
            bde:
                label: Associatif
                items:
                    - bde.admin.event
                    - bde.admin.club
                    - bde.admin.club_category
                    - bde.admin.lost_property
            shop:
                label: Breguet Shop
                items:
                    - bde.admin.product
                    - bde.admin.product_category
            media:
                label: sonata_media
                label_catalogue: SonataMediaBundle
                items: 
                    - sonata.media.admin.media
                    - sonata.media.admin.gallery
            user:
                label: sonata_user
                label_catalogue: SonataUserBundle
                items: 
                    - sonata.user.admin.user
                    - sonata.user.admin.group
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            GUEST:    [VIEW, LIST]
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [OPERATOR, EXPORT]
            ADMIN:    [MASTER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, OPERATOR, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, OPERATOR, MASTER, OWNER]

spy_timeline:
    drivers:
        orm:
            object_manager: doctrine.orm.entity_manager
            classes:
                query_builder: ~ # Spy\TimelineBundle\Driver\ORM\QueryBuilder\QueryBuilder
                timeline:         Application\Sonata\TimelineBundle\Entity\Timeline
                action:           Application\Sonata\TimelineBundle\Entity\Action
                component:        Application\Sonata\TimelineBundle\Entity\Component
                action_component: Application\Sonata\TimelineBundle\Entity\ActionComponent

    filters:
        data_hydrator:
            priority:             20
            service:              spy_timeline.filter.data_hydrator
            filter_unresolved:    false
            locators:
                - spy_timeline.filter.data_hydrator.locator.doctrine_orm

sonata_timeline:
    manager_type: orm

mopa_bootstrap:
    form:
        horizontal: true
        horizontal_label_class: col-lg-3 col-sm-3 control-label
        horizontal_label_offset_class:  col-lg-offset-3
        horizontal_input_wrapper_class: col-lg-9 col-sm-9
        render_fieldset: false
        render_collection_item: true
        show_legend: false
        show_child_legend:    false
        checkbox_label:       both
        render_optional_text:  true
        render_required_asterisk:  false
        error_type:           ~
    menu: ~

fos_rest:
    param_fetcher_listener: true
    body_listener:
        decoders:
            ics:            bde.decoder.ics
    service:
        view_handler: bde.view_handler.ics
    format_listener:        true
    view:
        view_response_listener: force
        mime_types: {'ics': ['text/calendar']}
    body_converter:
        enabled: true
        validate: true

nelmio_api_doc: ~

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }
    request: { converters: true }

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Application\Sonata\CommentBundle\Entity\Comment
            thread: Application\Sonata\CommentBundle\Entity\Thread
    form:
        comment:
            type: application_sonata_comment_comment
    acl: true
    service:
        manager:
            thread:  fos_comment.manager.thread.acl
            comment: fos_comment.manager.comment.acl
            vote:    fos_comment.manager.vote.acl
    acl_roles:
        comment:
            create: IS_AUTHENTICATED_ANONYMOUSLY
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        thread:
            create: IS_AUTHENTICATED_ANONYMOUSLY
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN
        vote:
            create: IS_AUTHENTICATED_ANONYMOUSLY
            view: IS_AUTHENTICATED_ANONYMOUSLY
            edit: ROLE_ADMIN
            delete: ROLE_ADMIN

sonata_comment:
    manager_type: orm

sonata_classification:
    class:
        tag:          Application\Sonata\ClassificationBundle\Entity\Tag
        category:     Application\Sonata\ClassificationBundle\Entity\Category
        collection:   Application\Sonata\ClassificationBundle\Entity\Collection

    admin:
        collection:
            class:        Application\Sonata\ClassificationBundle\Admin\CollectionAdmin

shivas_versioning:
    version_parameter:  application_version

jms_security_extra:
    expressions: true